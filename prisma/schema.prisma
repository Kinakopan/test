generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:8YpQyLpQxuK7sdWWA3mb@containers-us-west-11.railway.app:7656/railway"
  // url      = env("DATABASE_URL")
}

model Thought {
  id        Int       @id @default(autoincrement())
  title     String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  newskeyword  String
  content   String
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  thought      Thought     @relation(fields: [thoughtId], references: [id])
  thoughtId    Int
  createdAt DateTime @default(now())
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  comments      Comment[]
  thoughts      Thought[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
